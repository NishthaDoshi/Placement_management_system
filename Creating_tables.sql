Create PlacementOfficer Table
CREATE TABLE PlacementOfficer (
OfficerID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
FirstName VARCHAR2(50) NOT NULL,
LastName VARCHAR2(50) NOT NULL,
Email VARCHAR2(100) UNIQUE NOT NULL,
Phone VARCHAR2(15) NOT NULL,
Designation VARCHAR2(50) NOT NULL
);
-- Create Student Table
CREATE TABLE Student (
StudentID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
FirstName VARCHAR2(50) NOT NULL,
LastName VARCHAR2(50) NOT NULL,
Email VARCHAR2(100) UNIQUE NOT NULL,
Phone VARCHAR2(15) NOT NULL,
DateOfBirth DATE NOT NULL,
Department VARCHAR2(50) NOT NULL,
Program VARCHAR2(50) NOT NULL,
GraduationYear NUMBER(4) NOT NULL,
CGPA NUMBER(3,2) NOT NULL,
Resume CLOB,
OfficerID NUMBER,
FOREIGN KEY (OfficerID) REFERENCES PlacementOfficer(OfficerID)
);
-- Create Company Table
CREATE TABLE Company (
CompanyID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
CompanyName VARCHAR2(100) NOT NULL,
Industry VARCHAR2(50) NOT NULL,
Location VARCHAR2(100) NOT NULL,
ContactPerson VARCHAR2(100) NOT NULL,
ContactEmail VARCHAR2(100) UNIQUE NOT NULL,
ContactPhone VARCHAR2(15) NOT NULL,
CompanyWebsite VARCHAR2(100) NOT NULL,
OfficerID NUMBER,
FOREIGN KEY (OfficerID) REFERENCES PlacementOfficer(OfficerID)
);
-- Create JobPosting Table
CREATE TABLE JobPosting (
JobID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
JobTitle VARCHAR2(100) NOT NULL,
JobDescription CLOB NOT NULL,
RequiredSkills CLOB NOT NULL,
MinimumCGPA NUMBER(3,2) NOT NULL,
Salary NUMBER(10,2),
JobLocation VARCHAR2(100) NOT NULL,
PostingDate DATE NOT NULL,
ApplicationDeadline DATE NOT NULL,
Positions NUMBER NOT NULL,
CompanyID NUMBER,
FOREIGN KEY (CompanyID) REFERENCES Company(CompanyID)
);
-- Create Application Table
CREATE TABLE Application (
ApplicationID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
ApplicationDate DATE NOT NULL,
Status VARCHAR2(20) DEFAULT 'Applied' CHECK (Status IN ('Applied', 'Shortlisted', 'Rejected', 'Selected')),
CoverLetter CLOB,
StudentID NUMBER,
JobID NUMBER,
FOREIGN KEY (StudentID) REFERENCES Student(StudentID),
FOREIGN KEY (JobID) REFERENCES JobPosting(JobID)
);
-- Create Interview Table
CREATE TABLE Interview (
InterviewID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
InterviewDate DATE NOT NULL,
InterviewTime TIMESTAMP NOT NULL,
InterviewType VARCHAR2(20) CHECK (InterviewType IN ('Online', 'In-person', 'Telephonic')),
InterviewRound NUMBER NOT NULL,
Status VARCHAR2(20) DEFAULT 'Scheduled' CHECK (Status IN ('Scheduled', 'Completed', 'Cancelled')),
Feedback CLOB,
ApplicationID NUMBER,
FOREIGN KEY (ApplicationID) REFERENCES Application(ApplicationID)
);
